# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "master", "actions_troubleshoot" ]
  pull_request:
    branches: [ "master" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.8
      uses: actions/setup-python@v3
      with:
        python-version: "3.8"
    - name: Install dependencies
      run: |
        export CPLUS_INCLUDE_PATH=/usr/include/gdal
        export C_INCLUDE_PATH=/usr/include/gdal
        sudo DEBIAN_FRONTEND=noninteractive apt-add-repository ppa:ubuntugis/ubuntugis-unstable
        sudo apt update && sudo apt -y install libgdal-dev
        # lock to a specific version of PIP at least until GDAL works out its TOML issues
        # if not, it will fail to link with numpy and test will fail.
        # python3 -m pip install pip==23.0.1
        python3 -m pip install --upgrade pip
        python3 -m pip install flake8 pytest
        # install gdal here explicitly to match version with lib
        python3 -m pip install -r requirements.txt
        python3 -m pip install gdal==$(gdal-config --version)	
    # - name: Lint with flake8
    #  run: |
        # stop the build if there are Python syntax errors or undefined names
    #    flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
   #     flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        pytest
